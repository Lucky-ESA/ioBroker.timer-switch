{
  "version": 3,
  "sources": ["../../src/serialization/UniversalSerializer.ts"],
  "sourcesContent": ["import { Serializer } from \"./Serializer\";\n\nexport class UniversalSerializer<T extends Record<string, any>> implements Serializer<T> {\n    constructor(private serializers: Serializer<T>[]) {}\n\n    public useSerializer(serializer: Serializer<T>): void {\n        if (serializer == null) {\n            throw new Error(\"Serializer to use may not be null/undefined\");\n        }\n        this.serializers = this.serializers.filter((s) => s.getType() !== serializer.getType());\n        this.serializers.push(serializer);\n    }\n\n    public serialize(object: T): string {\n        const serializer = this.serializers.find((s) => s.getType() === object.constructor.name);\n        if (serializer) {\n            return serializer.serialize(object);\n        } else {\n            throw new Error(`No serializer for object of type ${object.constructor.name} found`);\n        }\n    }\n\n    public deserialize(stringToDeserialize: string): T {\n        const json = JSON.parse(stringToDeserialize);\n        const serializer = this.serializers.find((s) => s.getType() === json.type);\n        if (serializer) {\n            return serializer.deserialize(stringToDeserialize);\n        } else {\n            throw new Error(`No serializer for object of type ${json.type} found`);\n        }\n    }\n\n    getType(): string {\n        return \"Universal\";\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEO,MAAM,oBAA4E;AAAA,EACrF,YAAoB,aAA8B;AAA9B;AAAA,EAA+B;AAAA,EAE5C,cAAc,YAAiC;AAClD,QAAI,cAAc,MAAM;AACpB,YAAM,IAAI,MAAM,6CAA6C;AAAA,IACjE;AACA,SAAK,cAAc,KAAK,YAAY,OAAO,CAAC,MAAM,EAAE,QAAQ,MAAM,WAAW,QAAQ,CAAC;AACtF,SAAK,YAAY,KAAK,UAAU;AAAA,EACpC;AAAA,EAEO,UAAU,QAAmB;AAChC,UAAM,aAAa,KAAK,YAAY,KAAK,CAAC,MAAM,EAAE,QAAQ,MAAM,OAAO,YAAY,IAAI;AACvF,QAAI,YAAY;AACZ,aAAO,WAAW,UAAU,MAAM;AAAA,IACtC,OAAO;AACH,YAAM,IAAI,MAAM,oCAAoC,OAAO,YAAY,IAAI,QAAQ;AAAA,IACvF;AAAA,EACJ;AAAA,EAEO,YAAY,qBAAgC;AAC/C,UAAM,OAAO,KAAK,MAAM,mBAAmB;AAC3C,UAAM,aAAa,KAAK,YAAY,KAAK,CAAC,MAAM,EAAE,QAAQ,MAAM,KAAK,IAAI;AACzE,QAAI,YAAY;AACZ,aAAO,WAAW,YAAY,mBAAmB;AAAA,IACrD,OAAO;AACH,YAAM,IAAI,MAAM,oCAAoC,KAAK,IAAI,QAAQ;AAAA,IACzE;AAAA,EACJ;AAAA,EAEA,UAAkB;AACd,WAAO;AAAA,EACX;AACJ;",
  "names": []
}
