{
  "version": 3,
  "sources": ["../../src/serialization/OneTimeTriggerSerializer.ts"],
  "sourcesContent": ["import { Action } from \"../actions/Action\";\nimport { OneTimeTrigger } from \"../triggers/OneTimeTrigger\";\nimport { OneTimeTriggerBuilder } from \"../triggers/OneTimeTriggerBuilder\";\nimport { Trigger } from \"../triggers/Trigger\";\nimport { Serializer } from \"./Serializer\";\nimport { UniversalSerializer } from \"./UniversalSerializer\";\n\nexport class OneTimeTriggerSerializer implements Serializer<Trigger> {\n    constructor(\n        private readonly actionSerializer: UniversalSerializer<Action>,\n        private readonly deleteTrigger?: (triggerId: string) => void,\n    ) {}\n\n    public deserialize(stringToDeserialize: string): Trigger {\n        const json = JSON.parse(stringToDeserialize);\n        if (json.type !== this.getType()) {\n            throw new Error(`Can not deserialize object of type ${json.type}`);\n        }\n        return new OneTimeTriggerBuilder()\n            .setAction(this.actionSerializer.deserialize(JSON.stringify(json.action)))\n            .setDate(new Date(Date.parse(json.date)))\n            .setId(json.id)\n            .setOnDestroy(() => {\n                if (this.deleteTrigger) {\n                    this.deleteTrigger(json.id);\n                }\n            })\n            .build();\n    }\n\n    public serialize(objectToSerialize: Trigger): string {\n        if (objectToSerialize == null) {\n            throw new Error(\"objectToSerialize may not be null or undefined.\");\n        }\n        if (objectToSerialize instanceof OneTimeTrigger) {\n            return JSON.stringify({\n                type: this.getType(),\n                date: objectToSerialize.getDate().toISOString(),\n                id: objectToSerialize.getId(),\n                action: JSON.parse(this.actionSerializer.serialize(objectToSerialize.getInternalAction())),\n            });\n        } else {\n            throw new Error(\"objectToSerialize must be of type OneTimeTrigger.\");\n        }\n    }\n\n    getType(): string {\n        return OneTimeTrigger.prototype.constructor.name;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,4BAA+B;AAC/B,mCAAsC;AAK/B,MAAM,yBAAwD;AAAA,EACjE,YACqB,kBACA,eACnB;AAFmB;AACA;AAAA,EAClB;AAAA,EAEI,YAAY,qBAAsC;AACrD,UAAM,OAAO,KAAK,MAAM,mBAAmB;AAC3C,QAAI,KAAK,SAAS,KAAK,QAAQ,GAAG;AAC9B,YAAM,IAAI,MAAM,sCAAsC,KAAK,IAAI,EAAE;AAAA,IACrE;AACA,WAAO,IAAI,mDAAsB,EAC5B,UAAU,KAAK,iBAAiB,YAAY,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC,EACxE,QAAQ,IAAI,KAAK,KAAK,MAAM,KAAK,IAAI,CAAC,CAAC,EACvC,MAAM,KAAK,EAAE,EACb,aAAa,MAAM;AAChB,UAAI,KAAK,eAAe;AACpB,aAAK,cAAc,KAAK,EAAE;AAAA,MAC9B;AAAA,IACJ,CAAC,EACA,MAAM;AAAA,EACf;AAAA,EAEO,UAAU,mBAAoC;AACjD,QAAI,qBAAqB,MAAM;AAC3B,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AACA,QAAI,6BAA6B,sCAAgB;AAC7C,aAAO,KAAK,UAAU;AAAA,QAClB,MAAM,KAAK,QAAQ;AAAA,QACnB,MAAM,kBAAkB,QAAQ,EAAE,YAAY;AAAA,QAC9C,IAAI,kBAAkB,MAAM;AAAA,QAC5B,QAAQ,KAAK,MAAM,KAAK,iBAAiB,UAAU,kBAAkB,kBAAkB,CAAC,CAAC;AAAA,MAC7F,CAAC;AAAA,IACL,OAAO;AACH,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACvE;AAAA,EACJ;AAAA,EAEA,UAAkB;AACd,WAAO,qCAAe,UAAU,YAAY;AAAA,EAChD;AACJ;",
  "names": []
}
