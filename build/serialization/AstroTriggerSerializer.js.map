{
  "version": 3,
  "sources": ["../../src/serialization/AstroTriggerSerializer.ts"],
  "sourcesContent": ["import { Action } from \"../actions/Action\";\nimport { AstroTrigger } from \"../triggers/AstroTrigger\";\nimport { AstroTriggerBuilder } from \"../triggers/AstroTriggerBuilder\";\nimport { Trigger } from \"../triggers/Trigger\";\nimport { Serializer } from \"./Serializer\";\nimport { UniversalSerializer } from \"./UniversalSerializer\";\n\nexport class AstroTriggerSerializer implements Serializer<Trigger> {\n    constructor(private readonly actionSerializer: UniversalSerializer<Action>) {}\n\n    public deserialize(stringToDeserialize: string): Trigger {\n        const json = JSON.parse(stringToDeserialize);\n        if (json.type !== this.getType()) {\n            throw new Error(`Can not deserialize object of type ${json.type}`);\n        }\n        return new AstroTriggerBuilder()\n            .setAction(this.actionSerializer.deserialize(JSON.stringify(json.action)))\n            .setAstroTime(json.astroTime)\n            .setShift(json.shiftInMinutes)\n            .setWeekdays(json.weekdays)\n            .setId(json.id)\n            .build();\n    }\n\n    public serialize(objectToSerialize: Trigger): string {\n        if (objectToSerialize == null) {\n            throw new Error(\"objectToSerialize may not be null or undefined.\");\n        }\n        if (objectToSerialize instanceof AstroTrigger) {\n            return JSON.stringify({\n                type: this.getType(),\n                astroTime: objectToSerialize.getAstroTime(),\n                shiftInMinutes: objectToSerialize.getShiftInMinutes(),\n                weekdays: objectToSerialize.getWeekdays(),\n                id: objectToSerialize.getId(),\n                action: JSON.parse(this.actionSerializer.serialize(objectToSerialize.getAction())),\n            });\n        } else {\n            throw new Error(\"objectToSerialize must be of type AstroTrigger.\");\n        }\n    }\n    getType(): string {\n        return AstroTrigger.prototype.constructor.name;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAA6B;AAC7B,iCAAoC;AAK7B,MAAM,uBAAsD;AAAA,EAC/D,YAA6B,kBAA+C;AAA/C;AAAA,EAAgD;AAAA,EAEtE,YAAY,qBAAsC;AACrD,UAAM,OAAO,KAAK,MAAM,mBAAmB;AAC3C,QAAI,KAAK,SAAS,KAAK,QAAQ,GAAG;AAC9B,YAAM,IAAI,MAAM,sCAAsC,KAAK,IAAI,EAAE;AAAA,IACrE;AACA,WAAO,IAAI,+CAAoB,EAC1B,UAAU,KAAK,iBAAiB,YAAY,KAAK,UAAU,KAAK,MAAM,CAAC,CAAC,EACxE,aAAa,KAAK,SAAS,EAC3B,SAAS,KAAK,cAAc,EAC5B,YAAY,KAAK,QAAQ,EACzB,MAAM,KAAK,EAAE,EACb,MAAM;AAAA,EACf;AAAA,EAEO,UAAU,mBAAoC;AACjD,QAAI,qBAAqB,MAAM;AAC3B,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AACA,QAAI,6BAA6B,kCAAc;AAC3C,aAAO,KAAK,UAAU;AAAA,QAClB,MAAM,KAAK,QAAQ;AAAA,QACnB,WAAW,kBAAkB,aAAa;AAAA,QAC1C,gBAAgB,kBAAkB,kBAAkB;AAAA,QACpD,UAAU,kBAAkB,YAAY;AAAA,QACxC,IAAI,kBAAkB,MAAM;AAAA,QAC5B,QAAQ,KAAK,MAAM,KAAK,iBAAiB,UAAU,kBAAkB,UAAU,CAAC,CAAC;AAAA,MACrF,CAAC;AAAA,IACL,OAAO;AACH,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AAAA,EACJ;AAAA,EACA,UAAkB;AACd,WAAO,iCAAa,UAAU,YAAY;AAAA,EAC9C;AACJ;",
  "names": []
}
