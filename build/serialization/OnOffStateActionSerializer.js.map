{
  "version": 3,
  "sources": ["../../src/serialization/OnOffStateActionSerializer.ts"],
  "sourcesContent": ["import { Action } from \"../actions/Action\";\nimport { OnOffStateAction } from \"../actions/OnOffStateAction\";\nimport { OnOffStateActionBuilder } from \"../actions/OnOffStateActionBuilder\";\nimport { StateService } from \"../services/StateService\";\nimport { Serializer } from \"./Serializer\";\n\nexport class OnOffStateActionSerializer implements Serializer<Action> {\n    private readonly builder: OnOffStateActionBuilder<string | number | boolean>;\n\n    constructor(stateService: StateService) {\n        this.builder = new OnOffStateActionBuilder<string | number | boolean>();\n        this.builder.setStateService(stateService);\n    }\n\n    deserialize(stringToDeserialize: string): Action {\n        const json = JSON.parse(stringToDeserialize);\n        if (json.type !== this.getType()) {\n            throw new Error(`Can not deserialize object of type ${json.type}`);\n        }\n        if (!this.hasCorrectValueType(json)) {\n            throw new Error(`Can not deserialize OnOffStateAction with value type ${json.valueType}`);\n        }\n        return this.builder\n            .setOffValue(json.offValue)\n            .setOnValue(json.onValue)\n            .setBooleanValue(json.booleanValue)\n            .setIdsOfStatesToSet(json.idsOfStatesToSet)\n            .build();\n    }\n\n    serialize(objectToSerialize: Action): string {\n        if (objectToSerialize == null) {\n            throw new Error(\"objectToSerialize may not be null or undefined.\");\n        }\n        if (objectToSerialize instanceof OnOffStateAction) {\n            return JSON.stringify({\n                type: this.getType(),\n                valueType: typeof objectToSerialize.getOnValue(),\n                onValue: objectToSerialize.getOnValue(),\n                offValue: objectToSerialize.getOffValue(),\n                booleanValue: objectToSerialize.getBooleanValue(),\n                idsOfStatesToSet: objectToSerialize.getIdsOfStatesToSet(),\n            });\n        } else {\n            throw new Error(\"objectToSerialize must be of type OnOffStateAction.\");\n        }\n    }\n\n    public getType(): string {\n        return OnOffStateAction.prototype.constructor.name;\n    }\n\n    private hasCorrectValueType(json: any): boolean {\n        return [\"string\", \"number\", \"boolean\"].indexOf(json.valueType) != -1;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,8BAAiC;AACjC,qCAAwC;AAIjC,MAAM,2BAAyD;AAAA,EACjD;AAAA,EAEjB,YAAY,cAA4B;AACpC,SAAK,UAAU,IAAI,uDAAmD;AACtE,SAAK,QAAQ,gBAAgB,YAAY;AAAA,EAC7C;AAAA,EAEA,YAAY,qBAAqC;AAC7C,UAAM,OAAO,KAAK,MAAM,mBAAmB;AAC3C,QAAI,KAAK,SAAS,KAAK,QAAQ,GAAG;AAC9B,YAAM,IAAI,MAAM,sCAAsC,KAAK,IAAI,EAAE;AAAA,IACrE;AACA,QAAI,CAAC,KAAK,oBAAoB,IAAI,GAAG;AACjC,YAAM,IAAI,MAAM,wDAAwD,KAAK,SAAS,EAAE;AAAA,IAC5F;AACA,WAAO,KAAK,QACP,YAAY,KAAK,QAAQ,EACzB,WAAW,KAAK,OAAO,EACvB,gBAAgB,KAAK,YAAY,EACjC,oBAAoB,KAAK,gBAAgB,EACzC,MAAM;AAAA,EACf;AAAA,EAEA,UAAU,mBAAmC;AACzC,QAAI,qBAAqB,MAAM;AAC3B,YAAM,IAAI,MAAM,iDAAiD;AAAA,IACrE;AACA,QAAI,6BAA6B,0CAAkB;AAC/C,aAAO,KAAK,UAAU;AAAA,QAClB,MAAM,KAAK,QAAQ;AAAA,QACnB,WAAW,OAAO,kBAAkB,WAAW;AAAA,QAC/C,SAAS,kBAAkB,WAAW;AAAA,QACtC,UAAU,kBAAkB,YAAY;AAAA,QACxC,cAAc,kBAAkB,gBAAgB;AAAA,QAChD,kBAAkB,kBAAkB,oBAAoB;AAAA,MAC5D,CAAC;AAAA,IACL,OAAO;AACH,YAAM,IAAI,MAAM,qDAAqD;AAAA,IACzE;AAAA,EACJ;AAAA,EAEO,UAAkB;AACrB,WAAO,yCAAiB,UAAU,YAAY;AAAA,EAClD;AAAA,EAEQ,oBAAoB,MAAoB;AAC5C,WAAO,CAAC,UAAU,UAAU,SAAS,EAAE,QAAQ,KAAK,SAAS,KAAK;AAAA,EACtE;AACJ;",
  "names": []
}
