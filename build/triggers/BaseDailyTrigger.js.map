{
  "version": 3,
  "sources": ["../../src/triggers/BaseDailyTrigger.ts"],
  "sourcesContent": ["import { Action } from \"../actions/Action\";\nimport { DailyTrigger } from \"./DailyTrigger\";\nimport { Weekday } from \"./Weekday\";\n\nexport abstract class BaseDailyTrigger implements DailyTrigger {\n    private readonly weekdays: Weekday[];\n    private readonly id: string;\n    private action: Action;\n\n    protected constructor(id: string, action: Action, weekdays: Weekday[]) {\n        if (id == null) {\n            throw new Error(\"Id may not be null or undefined.\");\n        }\n        if (action == null) {\n            throw new Error(\"Action may not be null or undefined.\");\n        }\n        this.checkWeekdays(weekdays);\n        this.weekdays = weekdays;\n        this.action = action;\n        this.id = id;\n    }\n\n    public getWeekdays(): Weekday[] {\n        return this.weekdays;\n    }\n\n    public getAction(): Action {\n        return this.action;\n    }\n\n    public setAction(action: Action): void {\n        if (action == null) {\n            throw new Error(\"Action may not be null or undefined.\");\n        }\n        this.action = action;\n    }\n\n    public getId(): string {\n        return this.id;\n    }\n\n    private checkWeekdays(weekdays: Weekday[]): void {\n        if (weekdays == null) {\n            throw new Error(\"Weekdays may not be null or undefined.\");\n        }\n        if (weekdays.length <= 0 || weekdays.length > 7) {\n            throw new Error(\"Weekdays length must be in range 1-7.\");\n        }\n        if (this.hasDuplicates(weekdays)) {\n            throw new Error(\"Weekdays may not contain duplicates.\");\n        }\n    }\n\n    private hasDuplicates(weekdays: Weekday[]): boolean {\n        return new Set(weekdays).size !== weekdays.length;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIO,MAAe,iBAAyC;AAAA,EAC1C;AAAA,EACA;AAAA,EACT;AAAA,EAEE,YAAY,IAAY,QAAgB,UAAqB;AACnE,QAAI,MAAM,MAAM;AACZ,YAAM,IAAI,MAAM,kCAAkC;AAAA,IACtD;AACA,QAAI,UAAU,MAAM;AAChB,YAAM,IAAI,MAAM,sCAAsC;AAAA,IAC1D;AACA,SAAK,cAAc,QAAQ;AAC3B,SAAK,WAAW;AAChB,SAAK,SAAS;AACd,SAAK,KAAK;AAAA,EACd;AAAA,EAEO,cAAyB;AAC5B,WAAO,KAAK;AAAA,EAChB;AAAA,EAEO,YAAoB;AACvB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEO,UAAU,QAAsB;AACnC,QAAI,UAAU,MAAM;AAChB,YAAM,IAAI,MAAM,sCAAsC;AAAA,IAC1D;AACA,SAAK,SAAS;AAAA,EAClB;AAAA,EAEO,QAAgB;AACnB,WAAO,KAAK;AAAA,EAChB;AAAA,EAEQ,cAAc,UAA2B;AAC7C,QAAI,YAAY,MAAM;AAClB,YAAM,IAAI,MAAM,wCAAwC;AAAA,IAC5D;AACA,QAAI,SAAS,UAAU,KAAK,SAAS,SAAS,GAAG;AAC7C,YAAM,IAAI,MAAM,uCAAuC;AAAA,IAC3D;AACA,QAAI,KAAK,cAAc,QAAQ,GAAG;AAC9B,YAAM,IAAI,MAAM,sCAAsC;AAAA,IAC1D;AAAA,EACJ;AAAA,EAEQ,cAAc,UAA8B;AAChD,WAAO,IAAI,IAAI,QAAQ,EAAE,SAAS,SAAS;AAAA,EAC/C;AACJ;",
  "names": []
}
